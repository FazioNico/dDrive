{
  "projectType": "application",
  "sourceRoot": "apps/browser/src",
  "prefix": "d-drive",
  "targets": {
    "build": {
      "executor": "@ngx-env/builder:browser",
      "outputs": [
        "{options.outputPath}"
      ],
      "options": {
        "outputPath": "dist/apps/browser",
        "index": "apps/browser/src/index.html",
        "main": "apps/browser/src/main.ts",
        "polyfills": "apps/browser/src/polyfills.ts",
        "tsConfig": "apps/browser/tsconfig.app.json",
        "inlineStyleLanguage": "scss",
        "assets": [
          "apps/browser/src/favicon.ico",
          "apps/browser/src/assets",
          {
            "glob": "**/*.svg",
            "input": "node_modules/ionicons/dist/ionicons/svg",
            "output": "./svg"
          },
          "apps/browser/src/manifest.webmanifest"
        ],
        "styles": [
          "apps/browser/src/styles.scss",
          {
            "input": "node_modules/@ionic/angular/css/core.css"
          },
          {
            "input": "node_modules/@ionic/angular/css/normalize.css"
          },
          {
            "input": "node_modules/@ionic/angular/css/structure.css"
          },
          {
            "input": "node_modules/@ionic/angular/css/typography.css"
          },
          {
            "input": "node_modules/@ionic/angular/css/display.css"
          },
          {
            "input": "node_modules/@ionic/angular/css/padding.css"
          },
          {
            "input": "node_modules/@ionic/angular/css/float-elements.css"
          },
          {
            "input": "node_modules/@ionic/angular/css/text-alignment.css"
          },
          {
            "input": "node_modules/@ionic/angular/css/text-transformation.css"
          },
          {
            "input": "node_modules/@ionic/angular/css/flex-utils.css"
          },
          {
            "input": "apps/browser/src/theme/variables.scss"
          }
        ],
        "scripts": [],
        "allowedCommonJsDependencies": [
          "denque",
          "err-code",
          "iso-random-stream",
          "@stablelib/chacha20poly1305",
          "@stablelib/hkdf",
          "@stablelib/sha256",
          "@stablelib/x25519",
          "it-length",
          "k-bucket",
          "delay",
          "it-pushable",
          "it-pipe",
          "it-sort",
          "it-take",
          "level",
          "receptacle",
          "varint-decoder",
          "blob-to-it",
          "browser-readablestream-to-it",
          "it-all",
          "it-last",
          "it-parallel",
          "it-first",
          "it-filter",
          "it-map",
          "it-drain",
          "it-peekable",
          "it-to-buffer",
          "is-domain-name",
          "ipfs-utils/src/files/url-source.js",
          "stream-to-it/source.js",
          "bytes",
          "just-safe-get",
          "mortice",
          "it-parallel-batch",
          "iso-constants",
          "event-iterator",
          "lit-js-sdk",
          "near-api-js",
          "flat",
          "multihashes",
          "@stablelib/random",
          "lodash.clonedeep",
          "varint",
          "cross-fetch",
          "lru_map",
          "bn.js",
          "aes-js",
          "scrypt-js",
          "bech32",
          "hash.js",
          "dataloader",
          "@tableland/evm",
          "@tableland/evm/proxies.js",
          "siwe",
          "camelcase",
          "@walletconnect/window-getters",
          "@walletconnect/window-metadata",
          "@walletconnect/socket-transport",
          "@walletconnect/environment",
          "query-string",
          "@stablelib/ed25519",
          "apg-js/src/apg-api/api.js",
          "apg-js/src/apg-lib/node-exports.js",
          "@stablelib/xchacha20poly1305",
          "is-typedarray",
          "typedarray-to-buffer",
          "canonicalize",
          "elliptic",
          "js-sha3",
          "events",
          "ethereum-blockies-base64",
          "bowser",
          "@xmtp/xmtp-js"
        ],
        "serviceWorker": true,
        "ngswConfigPath": "apps/browser/ngsw-config.json"
      },
      "configurations": {
        "production": {
          "budgets": [
            {
              "type": "initial",
              "maximumWarning": "500kb",
              "maximumError": "5mb"
            },
            {
              "type": "anyComponentStyle",
              "maximumWarning": "4kb",
              "maximumError": "1mb"
            }
          ],
          "fileReplacements": [
            {
              "replace": "apps/browser/src/environments/environment.ts",
              "with": "apps/browser/src/environments/environment.prod.ts"
            }
          ],
          "outputHashing": "all"
        },
        "development": {
          "buildOptimizer": false,
          "optimization": false,
          "vendorChunk": true,
          "extractLicenses": false,
          "sourceMap": true,
          "namedChunks": true
        }
      },
      "defaultConfiguration": "production"
    },
    "serve": {
      "executor": "@ngx-env/builder:dev-server",
      "configurations": {
        "production": {
          "browserTarget": "browser:build:production"
        },
        "development": {
          "browserTarget": "browser:build:development"
        }
      },
      "defaultConfiguration": "development"
    },
    "extract-i18n": {
      "executor": "@ngx-env/builder:extract-i18n",
      "options": {
        "browserTarget": "browser:build"
      }
    },
    "lint": {
      "executor": "@nrwl/linter:eslint",
      "options": {
        "lintFilePatterns": [
          "apps/browser/**/*.ts",
          "apps/browser/**/*.html"
        ]
      }
    },
    "test": {
      "executor": "@ngx-env/builder:karma",
      "outputs": [
        "coverage/apps/browser"
      ],
      "options": {
        "jestConfig": "apps/browser/jest.config.ts",
        "passWithNoTests": true
      }
    }
  },
  "tags": []
}
